# Домашняя работа по уроку "Атрибуты и методы объекта."

# Цель: применить на практике знания о классах, объектах и их атрибутах.

# Задача "Developer - не только разработчик":
# Реализуйте класс House, объекты которого будут создаваться следующим образом: House('ЖК Эльбрус', 30)
# Объект этого класса должен обладать следующими атрибутами: self.name - имя, self.number_of_floors - кол-во этажей
# Также должен обладать методом go_to(new_floor), где new_floor - номер этажа(int), на который нужно приехать.
# Метод go_to выводит на экран(в консоль) значения от 1 до new_floor(включительно).
# Если же new_floor больше чем self.number_of_floors или меньше 1, то вывести строку "Такого этажа не существует".

# Пункты задачи:
# 1. Создайте класс House.
# 2. Внутри класса House определите метод __init__, в который передадите название и кол-во этажей.
# 3. Внутри метода __init__ создайте атрибуты объекта self.name и self.number_of_floors, присвойте им
# переданные значения.
# 4. Создайте метод go_to с параметром new_floor и напишите логику внутри него на основе описания задачи.
# 5. Создайте объект класса House с произвольным названием и количеством этажей.
# 6. Вызовите метод go_to у этого объекта с произвольным числом.

# Пример результата выполнения программы:
# Исходные данные:
# h1 = House('ЖК Горский', 18)
# h2 = House('Домик в деревне', 2)
# h1.go_to(5)
# h2.go_to(10)

# Вывод на консоль:
# 1
# 2
# 3
# 4
# 5
# "Такого этажа не существует"

# Примечания:
# 1. self - это переменная указывающая на объект. Используйте её для обращения к атрибутам или методам объекта.
# 2. Обращение к атрибутам или методам объекта/класса происходит при помощи "."
# 3. Метод __init__ вызывается в момент создания объекта.

class House:                                                # 1
    def __init__(self, name, number_of_floors):             # 2
        self.name = name                                    # 3
        self.number_of_floors = number_of_floors            # 3

    def go_to(self, new_floor):                             # 4
        for i in range(0, new_floor + 1):          # а по заданию надо поставить вместо 0 (или убрать) => 1
            if 1 <= new_floor <= self.number_of_floors:
                print(i)
                continue
            if 0 == new_floor:
                print(f'Это подвал или парковка на нижнем этаже: {new_floor}')
                continue
            else:
                print(f'Такого этажа не существует: {new_floor}')
                break

h1 = House('ЖК Горский', 18)
h2 = House('Домик в деревне', 2)
h1.go_to(5)
h2.go_to(10)
print("*****************************")
h3 = House('ЖК Хвойная роща', 7)        # 5
h3.go_to(0)
print("*****************************")
h3.go_to(3)
print("*****************************")
h3.go_to(8)
print("*****************************")
h3.go_to(7)